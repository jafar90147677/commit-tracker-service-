{
  "commit_hash": "84cb98d0b530536e0dd96271f7e7ed1909c24eeb",
  "repository_name": "commit-tracker-service",
  "author_name": "mdasif08",
  "author_email": "mohammadasif24680@gmail.com",
  "commit_message": "Clean up test files - automatic sync working",
  "commit_date": "2025-08-26T15:56:43+05:30",
  "source_type": "LOCAL",
  "branch_name": "main",
  "files_changed": [
    "scripts/auto_sync_commit.py",
    "src/database.py",
    "test_auto_hook.md",
    "test_auto_sync.md"
  ],
  "lines_added": 139,
  "lines_deleted": 14,
  "parent_commits": ["754fb66"],
  "status": "PROCESSED",
  "metadata": {
    "feature": "automatic sync",
    "priority": "high",
    "commit_type": "cleanup"
  },
  "diff_content": "diff --git a/scripts/auto_sync_commit.py b/scripts/auto_sync_commit.py\nnew file mode 100644\nindex 0000000..acf74bc\n--- /dev/null\n+++ b/scripts/auto_sync_commit.py\n@@ -0,0 +1,89 @@\n+#!/usr/bin/env python3\n+\"\"\"\n+Automatic commit sync script for Git hooks.\n+This script automatically syncs new commits to the database.\n+\"\"\"\n+\n+import asyncio\n+import subprocess\n+import sys\n+import os\n+from datetime import datetime\n+from src.database import get_db_service\n+from src.utils.git_utils import GitUtils\n+\n+async def auto_sync_latest_commit():\n+    \"\"\"Automatically sync the most recent commit to the database.\"\"\"\n+    try:\n+        # Get the latest commit hash\n+        result = subprocess.run(\n+            [\"git\", \"rev-parse\", \"HEAD\"],\n+            capture_output=True, text=True, check=True, encoding='utf-8'\n+        )\n+        commit_hash = result.stdout.strip()\n+\n+        # Get commit details\n+        git_utils = GitUtils()\n+        commit_info = git_utils.get_commit_info(commit_hash)\n+\n+        # Store in database\n+        db_service = await get_db_service()\n+        commit_id = await db_service.store_commit(commit_info)\n+\n+        print(f\"Commit {commit_hash[:8]} synced to database with ID: {commit_id}\")\n+        return commit_id\n+\n+    except Exception as e:\n+        print(f\"Failed to sync commit: {e}\")\n+        return None\n+\n+if __name__ == \"__main__\":\n+    asyncio.run(auto_sync_latest_commit())"
}
